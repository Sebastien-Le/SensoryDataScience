}
nbmodtot = sum(nbmod)
cont.table.jar <- matrix(NA, nrow = nbmodtot, ncol = nlevels(x[,1]))
for (j in 1:ncol(cont.table.jar)) cont.table.jar[, j] <- unlist(lapply(x[x[,1] == levels(x[, 1])[j], ind.jar], table))
rownames(cont.table.jar) = names(unlist(lapply(x[x[,1] == levels(x[, 1])[j], ind.jar], table)))
colnames(cont.table.jar) = levels(x[, 1])
return(cont.table.jar)
}
sennheiser.inter <- sennheiser[,c(2,4:22)]
contingency.CATA <- cont.jar(sennheiser.inter)
contingency.CATA <- t(contingency.CATA)
A <- apply(contingency.CATA[grep("A_",rownames(contingency.CATA)),], FUN = sum, 2)
P <- apply(contingency.CATA[grep("P_",rownames(contingency.CATA)),], FUN = sum, 2)
V <- apply(contingency.CATA[grep("V_",rownames(contingency.CATA)),], FUN = sum, 2)
T120 <- apply(contingency.CATA[grep("_120",rownames(contingency.CATA)),], FUN = sum, 2)
T160 <- apply(contingency.CATA[grep("_160_",rownames(contingency.CATA)),], FUN = sum, 2)
T80 <- apply(contingency.CATA[grep("_80",rownames(contingency.CATA)),], FUN = sum, 2)
P1 <- apply(contingency.CATA[grep("0_1",rownames(contingency.CATA)),], FUN = sum, 2)
P3 <- apply(contingency.CATA[grep("0_3",rownames(contingency.CATA)),], FUN = sum, 2)
P5 <- apply(contingency.CATA[grep("0_5",rownames(contingency.CATA)),], FUN = sum, 2)
row.sup <- rbind(A,P,V,T120,T160,T80,P1,P3,P5)
row.sup <- as.data.frame(row.sup)
contingency.CATA <- rbind(contingency.CATA, row.sup)
contingency.CATA <- contingency.CATA[,seq(2,38,2)]
colnames(contingency.CATA) <- str_replace(colnames(contingency.CATA),".Yes","")
is.data.frame(contingency.CATA)
sennheiser.inter <- sennheiser[,c(2,23:30)]
contingency.JAR <- cont.jar(sennheiser.inter)
contingency.JAR <- t(contingency.JAR)
A <- apply(contingency.JAR[grep("A_",rownames(contingency.JAR)),], FUN = sum, 2)
P <- apply(contingency.JAR[grep("P_",rownames(contingency.JAR)),], FUN = sum, 2)
V <- apply(contingency.JAR[grep("V_",rownames(contingency.JAR)),], FUN = sum, 2)
T120 <- apply(contingency.JAR[grep("_120",rownames(contingency.JAR)),], FUN = sum, 2)
T160 <- apply(contingency.JAR[grep("_160_",rownames(contingency.JAR)),], FUN = sum, 2)
T80 <- apply(contingency.JAR[grep("_80",rownames(contingency.JAR)),], FUN = sum, 2)
P1 <- apply(contingency.JAR[grep("0_1",rownames(contingency.JAR)),], FUN = sum, 2)
P3 <- apply(contingency.JAR[grep("0_3",rownames(contingency.JAR)),], FUN = sum, 2)
P5 <- apply(contingency.JAR[grep("0_5",rownames(contingency.JAR)),], FUN = sum, 2)
row.sup <- rbind(A,P,V,T120,T160,T80,P1,P3,P5)
row.sup <- as.data.frame(row.sup)
i <- 1
exp.design <- strsplit(rownames(contingency.JAR)[i], split = "_")[[1]]
for (i in 2:27){
exp.design <- rbind(exp.design, strsplit(rownames(contingency.JAR)[i], split = "_")[[1]])
}
contingency.JAR <- cbind(contingency.JAR, as.data.frame(exp.design))
contingency.JAR <- bind_rows(contingency.JAR, row.sup)
contingency.sennheiser <- cbind(contingency.CATA, contingency.JAR)
colnames(contingency.sennheiser)[60:62] <- c("Instrument","Tempo","Pitch")
colnames(contingency.sennheiser)
dim(contingency.sennheiser)
res.mfa <- MFA(contingency.sennheiser[1:27,1:59], group = c(19,40), type = c("f","f"), graph = F)
plot.MFA(res.mfa, choix = "group")
res.mfa <- MFA(contingency.sennheiser[1:27,1:59], group = c(19,40), type = c("f","f"), graph = F, name.group = c("CATA","JAR"))
plot.MFA(res.mfa, choix = "group")
plot.MFA(res.mfa)
?plot.MFA
plot.MFA(res.mfa, choix = "freq")
plot.MFA(res.mfa, choix = "freq", invisible = "ind")
plot.MFA(res.mfa, choix = "freq", invisible = c("ind","col"))
plot.MFA(res.mfa, choix = "freq", invisible = "ind")
names(res.mfa)
res.mfa$freq
plot.MFA(res.mfa, choix = "freq", invisible = "ind", select = c("Artisanal","Passion"))
plot.MFA(res.mfa, choix = "group")
plot.MFA(res.mfa, choix = "freq", invisible = "ind", select = c("Artisanal","Passion"))
plot.MFA(res.mfa, choix = "freq", invisible = "ind")
plot.MFA(res.mfa, choix = "freq", invisible = "ind", select = c("Artisanal","Passion","Human")
)
res.mfa$freq
res.mfa$freq$coord
colnames(res.mfa$freq$coord)
rownames(res.mfa$freq$coord)
rep("cata",19)
rep("jar",40)
c(rep("cata",19),rep("jar",40))
cbind(res.mfa$freq$coord, c(rep("cata",19),rep("jar",40)))
is.data.frame(res.mfa$freq$coord)
cbind(as.data.frame(res.mfa$freq$coord), c(rep("cata",19),rep("jar",40)))
c(rep("cata",19),rep("jar",40))
type <- c(rep("cata",19),rep("jar",40))
type <- c(rep("cata",19),rep("jar",40))
type
cbind(as.data.frame(res.mfa$freq$coord),type)
coord.freq <- cbind(as.data.frame(res.mfa$freq$coord),type)
ggplot(coord.freq, aes(x = Dim.1, y = Dim.2)) +
geom_point() +
geom_text_repel(label = rownames(penalties)) +
geom_abline(intercept = 0, slope = 1) +
xlab("Penalties for all products") +
ylab("Penalties for JPR") +
ggtitle("Impact of defects all versus JPR") +
coord_fixed() +
ylim(-2,0.5) +
xlim(-2,0.5) +
theme_light()
names(coord.freq)
ggplot(coord.freq, aes(x = Dim.1, y = Dim.2)) +
geom_point() +
geom_text_repel(label = rownames(coord.freq)) +
geom_abline(intercept = 0, slope = 1) +
xlab("Penalties for all products") +
ylab("Penalties for JPR") +
ggtitle("Impact of defects all versus JPR") +
coord_fixed() +
ylim(-2,0.5) +
xlim(-2,0.5) +
theme_light()
summary(coord.freq)
summary(coord.freq)
ggplot(coord.freq, aes(x = Dim.1, y = Dim.2)) +
geom_point() +
geom_text_repel(label = rownames(coord.freq)) +
xlab("Penalties for all products") +
ylab("Penalties for JPR") +
ggtitle("Impact of defects all versus JPR") +
coord_fixed() +
ylim(-0.5,1.5) +
xlim(-1,1.5) +
theme_light()
ggplot(coord.freq, aes(x = Dim.1, y = Dim.2)) +
#geom_point() +
geom_point(aes(colour = type)) +
geom_text_repel(label = rownames(coord.freq)) +
xlab("Penalties for all products") +
ylab("Penalties for JPR") +
ggtitle("Impact of defects all versus JPR") +
coord_fixed() +
ylim(-0.5,1.5) +
xlim(-1,1.5) +
theme_light()
ggplot(coord.freq, aes(x = Dim.1, y = Dim.2)) +
#geom_point() +
geom_point(aes(colour = type)) +
geom_text_repel(label = rownames(coord.freq), max.overlaps = Inf) +
xlab("Penalties for all products") +
ylab("Penalties for JPR") +
ggtitle("Impact of defects all versus JPR") +
coord_fixed() +
ylim(-0.5,1.5) +
xlim(-1,1.5) +
theme_light()
ggplot(coord.freq, aes(x = Dim.1, y = Dim.2)) +
#geom_point() +
geom_point(aes(colour = type)) +
geom_text_repel(label = rownames(coord.freq), max.overlaps = 10) +
xlab("Penalties for all products") +
ylab("Penalties for JPR") +
ggtitle("Impact of defects all versus JPR") +
coord_fixed() +
ylim(-0.5,1.5) +
xlim(-1,1.5) +
theme_light()
MFA(contingency.sennheiser[1:27,1:59], group = c(19,40), type = c("f","f"), name.group = c("CATA","JAR"))
contingency.sennheiser
coord.freq
ggplot(coord.freq, aes(x = Dim.1, y = Dim.2)) +
#geom_point() +
geom_point(aes(colour = type)) +
geom_text_repel(label = rownames(coord.freq), max.overlaps = 10) +
xlab("Penalties for all products") +
ylab("Penalties for JPR") +
ggtitle("Impact of defects all versus JPR") +
coord_fixed() +
ylim(-0.5,1.5) +
xlim(-1,1.5) +
theme_light()
library(ggplot2)
library(ggrepel)
library(SensoMineR)
library(stringr)
goji <- read.csv2("data/goji.csv")
summary(goji)
for (j in 1:12) goji[,j] <- as.factor(goji[,j])
summary(goji)
goji.liking <- goji[,-c(2,3,5,6,14)]
goji.typicity <- goji[,-c(2,3,5,6,13)]
res.jar.liking <- JAR(goji.liking, col.p = 2, col.j = 1, col.pref = 9, jarlevel = "JAR")
res.jar.typicity <- JAR(goji.typicity, col.p = 2, col.j = 1, col.pref = 9, jarlevel = "JAR")
res.jar.liking$penalty2
res.jar.typicity$penalty2
penalties <- cbind(res.jar.liking$penalty2, res.jar.typicity$penalty2)[,c(1,4)]
colnames(penalties) <- c("Liking","Typicity")
penalties <- as.data.frame(penalties)
penalties
ggplot(penalties, aes(x = Liking, y = Typicity)) +
geom_point() +
geom_text(label = rownames(penalties)) +
geom_abline(intercept = 0, slope = 1) +
xlab("Penalties for Liking") +
ylab("Penalties for Typicity") +
ggtitle("Impact of defects on liking and typicity")
ggplot(penalties, aes(x = Liking, y = Typicity)) +
geom_point() +
geom_text(label = rownames(penalties)) +
geom_abline(intercept = 0, slope = 1) +
xlab("Penalties for Liking") +
ylab("Penalties for Typicity") +
ggtitle("Impact of defects on liking and typicity") +
coord_fixed() +
ylim(-2.8,0.5) +
xlim(-2.8,0.5)
ggplot(penalties, aes(x = Liking, y = Typicity)) +
geom_point() +
geom_text_repel(label = rownames(penalties)) +
geom_abline(intercept = 0, slope = 1) +
xlab("Penalties for Liking") +
ylab("Penalties for Typicity") +
ggtitle("Impact of defects on liking and typicity") +
coord_fixed() +
ylim(-2.8,0.5) +
xlim(-2.8,0.5)
ggplot(penalties, aes(x = Liking, y = Typicity)) +
geom_point() +
geom_text_repel(label = rownames(penalties), max.overlaps = Inf) +
geom_abline(intercept = 0, slope = 1) +
xlab("Penalties for Liking") +
ylab("Penalties for Typicity") +
ggtitle("Impact of defects on liking and typicity") +
coord_fixed() +
ylim(-2.8,0.5) +
xlim(-2.8,0.5)
ggplot(penalties, aes(x = Liking, y = Typicity)) +
geom_point() +
geom_text_repel(label = rownames(penalties), max.overlaps = Inf) +
geom_abline(intercept = 0, slope = 1) +
xlab("Penalties for Liking") +
ylab("Penalties for Typicity") +
ggtitle("Impact of defects on liking and typicity") +
coord_fixed() +
ylim(-2.8,0.5) +
xlim(-2.8,0.5) +
theme_light()
summary(goji)
res.mca <- MCA(goji, quali.sup = 1:6, quanti.sup = 13:14, graph = F)
plot.MCA(res.mca)
plot.MCA(res.mca, invisible = c("var", "quali.sup"), label = "no")
res.mca <- MCA(goji, quali.sup = 1:6, quanti.sup = 13:14, graph = F, level.ventil = 0.1)
plot.MCA(res.mca, invisible = c("var", "quali.sup"), label = "no")
plot.MCA(res.mca, invisible = c("ind", "quali.sup"))
plot.MCA(res.mca, invisible = "ind")
res.mca <- MCA(goji[,-c(1:3)], quali.sup = 1:3, quanti.sup = 10:11, graph = F, level.ventil = 0.1)
plot.MCA(res.mca, invisible = c("var", "quali.sup"), label = "no")
plot.MCA(res.mca, invisible = "ind")
mod <- "JAR"
all_attr <- rownames(res.mca$var$coord)
mod_select <- all_attr[which(str_detect(all_attr,mod))]
mod_select
mod <- "JAR"
all.attr <- rownames(res.mca$var$coord)
mod.select <- all.attr[which(str_detect(all.attr, mod))]
mod.select
plot.MCA(res.mca, invisible = "ind", selectMod = c("orange","ananas","pomme","20","10","0",mod.select))
plot.MCA(res.mca, choix = "quanti.sup")
plot.MCA(res.mca, invisible = "ind", selectMod = c("orange","ananas","pomme","20","10","0",mod.select))
goji.inter <- goji[,c(4,7:12)] # product and JAR
goji.inter
j <- 2
contingency <- table(goji.inter$Product,goji.inter[,j])
colnames(contingency) <- paste(colnames(goji.inter)[j], levels(goji.inter[,j]), sep = "_")
contingency
names(goji_inter)
names(goji.inter)
for (j in 3:7){
inter <- table(goji.inter$Product,goji.inter[,j])
colnames(inter) <- paste(colnames(goji.inter)[j], levels(goji.inter[,j]), sep = "_")
contingency <- cbind(contingency, inter)
}
Apple <- apply(contingency[c("127","431","759"),], FUN = sum, 2)
Pineapple <- apply(contingency[c("245","518","876"),], FUN = sum, 2)
Orange <- apply(contingency[c("362","694","983"),], FUN = sum, 2)
D0 <- apply(contingency[c("127","245","362"),], FUN = sum, 2)
D10 <- apply(contingency[c("431","518","694"),], FUN = sum, 2)
D20 <- apply(contingency[c("759","876","983"),], FUN = sum, 2)
row.sup <- rbind(Apple,Pineapple,Orange,D0,D10,D20)
row.sup
is.data.frame(row.sup)
contingency <- rbind(contingency,row.sup)
is.data.frame(contingency)
row.sup <- as.data.frame(row.sup)
contingency <- rbind(contingency,row.sup)
is.data.frame(contingency)
rbind(Apple,Pineapple,Orange,D0,D10,D20)
row.sup <- rbind(Apple,Pineapple,Orange,D0,D10,D20)
j <- 2
contingency <- table(goji.inter$Product,goji.inter[,j])
colnames(contingency) <- paste(colnames(goji.inter)[j], levels(goji.inter[,j]), sep = "_")
for (j in 3:7){
inter <- table(goji.inter$Product,goji.inter[,j])
colnames(inter) <- paste(colnames(goji.inter)[j], levels(goji.inter[,j]), sep = "_")
contingency <- cbind(contingency, inter)
}
contingency
contingency <- rbind(contingency,row.sup)
contingency
res.ca <- CA(contingency, graph = F, row.sup = c(10:15))
plot.CA(res.ca, invisible = "col")
ellipseCA(res.ca, ellipse = "row", invisible = "col")
descfreq(contingency[c(1:9),])
descfreq(contingency[c(10:12),])
descfreq(contingency[c(13:15),])
goji.liking.s1 <- goji[goji$Session =="S1",-c(2,3,5,6,14)]
goji.liking.s2 <- goji[goji$Session =="S2",-c(2,3,5,6,14)]
res.jar.s1 <- JAR(goji.liking.s1, col.p = 2, col.j = 1, col.pref = 9, jarlevel = "JAR")
res.jar.s2 <- JAR(goji.liking.s2, col.p = 2, col.j = 1, col.pref = 9, jarlevel = "JAR")
penalties <- cbind(res.jar.s1$penalty2, res.jar.s2$penalty2)[,c(1,4)]
colnames(penalties) <- c("Session_1","Session_2")
penalties <- as.data.frame(penalties)
summary(penalties)
ggplot(penalties, aes(x = Session_1, y = Session_2)) +
geom_point() +
geom_text_repel(label = rownames(penalties), max.overlaps = Inf) +
geom_abline(intercept = 0, slope = 1) +
xlab("Penalties for Session_1") +
ylab("Penalties for Session_2") +
ggtitle("Impact of defects on session 1 and session2") +
coord_fixed() +
ylim(-3,0.5) +
xlim(-3,0.5) +
theme_light()
goji.s1 <- goji[goji$Session =="S1",]
goji.s2 <- goji[goji$Session =="S2",]
goji.s1 <- goji.s1[order(goji.s1$Consumer, goji.s1$Product), ]
goji.s2 <- goji.s2[order(goji.s2$Consumer, goji.s2$Product), ]
goji.s1[1:5,]
goji.s2[1:5,]
goji.s1.s2 <- cbind(goji.s1[,-c(1:6,13:14)], goji.s2[,-c(1:6,13:14)])
res.mfa <- MFA(goji.s1.s2, group = c(6,6), type = c("n","n"), name.group = c("S1","S2"), graph = F)
plot.MFA(res.mfa, choix = "group")
goji.s1.prod <- t(cont.jar(goji.s1[,-c(1:3,5,6,13,14)]))
colnames(goji.s1.prod) <- paste(colnames(goji.s1.prod),rep("s1",dim(goji.s1.prod)[2]),sep=".")
goji.s2.prod <- t(cont.jar(goji.s2[,-c(1:3,5,6,13,14)]))
colnames(goji.s2.prod) <- paste(colnames(goji.s2.prod),rep("s2",dim(goji.s2.prod)[2]),sep=".")
goji.prod.s1.s2 <- cbind(goji.s1.prod,goji.s2.prod)
goji.prod.s1.s2
res.mfa <- MFA(goji.prod.s1.s2, group = c(30,30), type = c("f","f"), name.group = c("S1","S2"), graph = F)
plot.MFA(res.mfa, choix = "group")
plot(res.jar, name.prod = "2JPR", model = 2)
plot.JAR(res.jar, name.prod = "2JPR", model = 2)
library(dplyr)
library(sentimentr)
library(FactoMineR)
library(RTextTools)
library(RTextTools)
leather <- read.csv2("data/leather.csv")
leather <- read.csv2("data/leather.csv")
##02
leather <- read.csv2("data/leather.csv")
dico_pola <- read.csv2("data/valency_leather.csv")
dico_val <- read.csv2("data/valence_shifters_leather.csv")
leather
leather$Text <- tolower(leather$Text) #met tout en minuscules
dico_pola$Word <- tolower(dico_pola$Word)
dico_val$Word <- tolower(dico_val$Word)
leather$Text <- gsub("[`^~.',!?;\"]", " ", leather$Text)
leather$Text <- gsub("[[:punct:]]", "", leather$Text)
leather$Text <- gsub("just right", "justright", leather$Text)
leather$Text <- gsub("too much", "toomuch", leather$Text)
leather$Text <- gsub("even if", "evenif", leather$Text)
leather$Text <- gsub("not enough", "notenough", leather$Text)
mykey_pola <- as_key(dico_pola)
mykey_val <- as_key(dico_val)
data_sent <- get_sentences(leather$Text)
sentiment1 <- sentiment(data_sent,polarity_dt=mykey_pola,valence_shifters_dt = mykey_val)
leather$sentiment <- sentiment1$sentiment
sentprod <- aggregate(leather$sentiment, by=list(leather$Product), FUN=mean)
sentprod <- sentprod%>%arrange(-x)
liking <- aggregate(leather$Liking,by=list(leather$Product),mean)
liking <- liking%>%arrange(-x)
leather$Liking <- factor(leather$Liking)
leather$Hedo_cat <- factor(leather$Hedo_cat)
AovSum(leather$sentiment ~ leather$Hedo_cat)
AovSum(leather$sentiment ~ leather$Liking)
data_pca <- data.frame(matrix(0,ncol=length(unique(leather$ID_juge)), nrow=length(unique(leather$Product))))
colnames(data_pca) <- unique(leather$ID_juge)
rownames(data_pca) <- unique(leather$Product)
for(j in 1:length(unique(leather$ID_juge))){
for (i in 1:length(unique(leather$Product))){
k <- leather[which(leather$ID_juge == colnames(data_pca)[j] & leather$Product == rownames(data_pca)[i]),6]
if(length(k)==0){
data_pca[i,j] <- 0
}else{
data_pca[i,j] <- k
}
}
}
res.pca <- PCA(data_pca)
dtm <- create_matrix(leather$Text, removeStopwords = TRUE)
#dtm$dimnames$Terms
dtm_mat <- as.data.frame(matrix(0,nrow=length(unique(leather$Product)),ncol=dtm$ncol))
rownames(dtm_mat) <- unique(leather$Product)
colnames(dtm_mat) <- dtm$dimnames$Terms
for(i in 1:dim(leather)[1]){
sent <- str_split(leather$Text[i]," ")[[1]]
for (j in 1:length(sent)){
dtm_mat[which(rownames(dtm_mat)==leather$Product[i]),which(colnames(dtm_mat)==sent[j])] <- dtm_mat[which(rownames(dtm_mat)==leather$Product[i]),which(colnames(dtm_mat)==sent[j])] + 1
}
}
res_desc <- descfreq(dtm_mat, proba = 0.1)
for (i in 1:10){
res_desc[[i]] <- res_desc[[i]][which(res_desc[[i]][,3]>=1),]
}
leather <- read.csv2("data/leather.csv")
dico_pola <- read.csv2("data/valency_leather.csv")
dico_val <- read.csv2("data/valence_shifters_leather.csv")
dico_pola
dico_val
leather
leather[1:5,]
leather$Text <- tolower(leather$Text) #met tout en minuscules
dico_pola$Word <- tolower(dico_pola$Word)
dico_val$Word <- tolower(dico_val$Word)
leather$Text <- gsub("[`^~.',!?;\"]", " ", leather$Text)
leather$Text <- gsub("[[:punct:]]", "", leather$Text)
leather$Text <- gsub("just right", "justright", leather$Text)
leather$Text <- gsub("too much", "toomuch", leather$Text)
leather$Text <- gsub("even if", "evenif", leather$Text)
leather$Text <- gsub("not enough", "notenough", leather$Text)
mykey_pola <- as_key(dico_pola)
mykey_val <- as_key(dico_val)
mykey_pola
data_sent <- get_sentences(leather$Text)
data_sent
data_sent[[1]]
data_sent[[2]]
leather[1:5,]
data_sent[[3]]
sentiment1 <- sentiment(data_sent, polarity_dt = mykey_pola, valence_shifters_dt = mykey_val)
leather$sentiment <- sentiment1$sentiment
leather[1:5,]
sentprod <- aggregate(leather$sentiment, by=list(leather$Product), FUN=mean)
sentprod
sentprod <- sentprod%>%arrange(-x)
sentprod
sentprod <- sentprod %>% arrange(-x)
sentprod
liking <- aggregate(leather$Liking, by = list(leather$Product), FUN = mean)
liking <- liking %>% arrange(-x)
liking
##08
leather$Liking <- factor(leather$Liking)
leather$Hedo_cat <- factor(leather$Hedo_cat)
AovSum(leather$sentiment ~ leather$Hedo_cat)
AovSum(leather$sentiment ~ leather$Liking)
##09
data_pca <- data.frame(matrix(0,ncol=length(unique(leather$ID_juge)), nrow=length(unique(leather$Product))))
data_pca
colnames(data_pca) <- unique(leather$ID_juge)
rownames(data_pca) <- unique(leather$Product)
data_pca
for(j in 1:length(unique(leather$ID_juge))){
for (i in 1:length(unique(leather$Product))){
k <- leather[which(leather$ID_juge == colnames(data_pca)[j] & leather$Product == rownames(data_pca)[i]),6]
if(length(k)==0){
data_pca[i,j] <- 0
}else{
data_pca[i,j] <- k
}
}
}
res.pca <- PCA(data_pca)
##10
dtm <- create_matrix(leather$Text, removeStopwords = TRUE)
dtm_mat <- as.data.frame(matrix(0,nrow=length(unique(leather$Product)),ncol=dtm$ncol))
dtm_mat
rownames(dtm_mat) <- unique(leather$Product)
colnames(dtm_mat) <- dtm$dimnames$Terms
dtm_mat
for(i in 1:dim(leather)[1]){
sent <- str_split(leather$Text[i]," ")[[1]]
for (j in 1:length(sent)){
dtm_mat[which(rownames(dtm_mat)==leather$Product[i]),which(colnames(dtm_mat)==sent[j])] <- dtm_mat[which(rownames(dtm_mat)==leather$Product[i]),which(colnames(dtm_mat)==sent[j])] + 1
}
}
dtm_mat
for (i in 1:10){
res_desc[[i]] <- res_desc[[i]][which(res_desc[[i]][,3]>=1),]}
res_desc
res_desc <- descfreq(dtm_mat, proba = 0.1)
res_desc
for (i in 1:10){
res_desc[[i]] <- res_desc[[i]][which(res_desc[[i]][,3]>=1),]}
res_desc
res_desc <- descfreq(dtm_mat, proba = 0.1)
for (i in 1:10) res_desc[[i]] <- res_desc[[i]][which(res_desc[[i]][,3]>=1),]
res_desc
sentiment1
data_sent
?get_sentences
dtm_mat
dtm_mat[,1:5]
dtm_mat[,1:15]
CA(dtm_mat)
res.ca <- CA(dtm_mat, graph = F)
plot.ca(res.ca, invisible = "col")
plot.CA(res.ca, invisible = "col")
res.pca <- PCA(data_pca)
apply(dtm_mat, sum, 2)
apply(dtm_mat, 2, sum)
apply(dtm_mat, 2, sum)>=3
dtm_mat[,apply(dtm_mat, 2, sum)>=3]
dtm_mat[,apply(dtm_mat, 2, sum)>=6]
res.ca <- CA(dtm_mat[,apply(dtm_mat, 2, sum)>=6], graph = F)
plot.CA(res.ca, invisible = "col")
res.ca <- CA(dtm_mat[,apply(dtm_mat, 2, sum)>=3], graph = F)
plot.CA(res.ca, invisible = "col")
leather$Text
mykey_pola <- as_key(dico_pola)
mykey_val <- as_key(dico_val)
##05
data_sent <- get_sentences(leather$Text)
sentiment1 <- sentiment(data_sent, polarity_dt = mykey_pola, valence_shifters_dt = mykey_val)
