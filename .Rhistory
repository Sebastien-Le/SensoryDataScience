?par
orange <- read.csv2("data/orange.csv")
summary(orange,maxsum = 8)
colnames(orange)
orange <- as.data.frame(orange)
orange <- read.csv2("data/orange.csv")
summary(orange,maxsum = 8)
colnames(orange)
is.data.frame(orange)
for (j in c(1:2,4:9)) orange[,j] <- as.factor(orange[,j])
is.data.frame(orange)
orange <- read.csv2("data/orange.csv")
summary(orange,maxsum = 8)
colnames(orange)
#orange <- as.data.frame(orange)
for (j in c(1:2,4:9)) orange[,j] <- as.factor(orange[,j])
summary(orange)
for (j in 4:9) levels(orange[,j]) <- c("ne","ne","JAR","tm","tm")
summary(orange)
orange.disj <- acm.disjonctif(orange[,4:9])
library(ade4)
for (j in 4:9) levels(orange[,j]) <- c("ne","ne","JAR","tm","tm")
summary(orange)
orange.disj <- acm.disjonctif(orange[,4:9])
summary(orange.disj)
orange.disj <- cbind(orange[,1:3],orange.disj)
colnames(orange.disj)
num_JAR <- seq(5,21,3)
num_col <- seq(4,21)
num_col <- num_col[-which(num_col%in%num_JAR)]
summary(orange.disj)
eq.anova <- "AovSum(Liking ~ "
for (i in num_col){
eq.anova <- paste(eq.anova,colnames(orange.disj)[i],"+", sep=" ")
}
eq.anova <- paste(eq.anova, "Juice + Consumer, data = orange.disj)")
res.aov <- eval(parse(text = eq.anova))
library(FactoMineR)
?read.csv2
dim(orange)
848/8
levels(orange$Consumer)
nlevels(orange$Consumer)
colnames(orange)
orange <- read.csv2("data/orange.csv")
summary(orange,maxsum = 8)
colnames(orange)
orange <- read.csv2("data/orange.csv")
summary(orange,maxsum = 8)
?as.factor
summary(orange)
?acm.disjonctif
?AovSum
summary(orange.disj)
levels(orange$Consumer)
#orange <- as.data.frame(orange)
for (j in c(1:2,4:9)) orange[,j] <- as.factor(orange[,j])
summary(orange)
for (j in 4:9) levels(orange[,j]) <- c("ne","ne","JAR","tm","tm")
summary(orange)
orange.disj <- acm.disjonctif(orange[,4:9])
summary(orange.disj)
orange.disj <- cbind(orange[,1:3],orange.disj)
colnames(orange.disj)
num_JAR <- seq(5,21,3)
num_col <- seq(4,21)
num_col <- num_col[-which(num_col%in%num_JAR)]
summary(orange.disj)
eq.anova <- "AovSum(Liking ~ "
for (i in num_col){
eq.anova <- paste(eq.anova,colnames(orange.disj)[i],"+", sep=" ")
}
eq.anova
eq.anova <- paste(eq.anova, "Juice + Consumer, data = orange.disj)")
eq.anova
res.aov <- eval(parse(text = eq.anova))
res.aov
library(FactoMineR)
AovSum(Liking ~ Nc.ne + Nc.tm + Io.ne + Io.tm + Su.ne + Su.tm +
Ac.ne + Ac.tm + Bt.ne + Bt.tm + Pu.ne + Pu.tm +
Consumer + Juice, data = orange.disj)
orange <- read.csv2("data/orange.csv")
summary(orange,maxsum = 8)
colnames(orange)
dim(orange)
848/8
levels(orange$Consumer)
#orange <- as.data.frame(orange)
for (j in c(1:2,4:9)) orange[,j] <- as.factor(orange[,j])
summary(orange)
for (j in 4:9) levels(orange[,j]) <- c("ne","ne","JAR","tm","tm")
summary(orange)
eq.anova <- "AovSum(Liking ~ "
for (i in num_col){
eq.anova <- paste(eq.anova,colnames(orange.disj)[i],"+", sep=" ")
}
eq.anova <- paste(eq.anova, "Juice + Consumer, data = orange.disj)")
res.aov <- eval(parse(text = eq.anova))
res.aov
orange.disj.pdt <- orange.disj[which(orange.disj$Juice=="1JPA"),]
orange.disj.pdt <- orange.disj[orange.disj$Juice=="1JPA",]
orange.disj.pdt
?which
which(orange.disj$Juice=="1JPA")
(orange.disj$Juice=="1JPA"
)
orange.disj$Juice=="1JPA"
orange.disj.pdt
?AovSum
?JAR
library(SensoMineR)
?JAR
res.jar <- JAR(orange, col.p = 1, col.j = 2, col.pref = 3)
orange
res.jar <- JAR(orange, col.p = 1, col.j = 2, col.pref = 3, jarlevel="JAR")
res.jar
plot(res.jar, name.prod = "2JPR", model = 2)
res.jar <- JAR(orange, col.p = 2, col.j = 1, col.pref = 3, jarlevel="JAR")
plot(res.jar, name.prod = "2JPR", model = 2)
plot.JAR
summary(orange)
for (j in 4:9) levels(orange[,j]) <- c(paste(colnames(orange)[j],levels(orange[,j])[1],sep="."),"JAR",paste(colnames(orange)[j],levels(orange[,j])[3],sep="."))
summary(orange)
summary(orange)
res.mca <- MCA(orange, quanti.sup = 3, quali.sup = 1:2, graph = F)
plot.MCA(res.mca, invisible = c("var","quali.sup"))
plot.MCA(res.mca, invisible = c("var","quali.sup"), label = F)
plot.MCA(res.mca, invisible = c("var","quali.sup"), label = "none")
plot.MCA(res.mca, invisible = c("var","quali.sup"), label = "none", title = "Understanding defects profiles")
res.mca <- MCA(orange[,-1], quanti.sup = 2, quali.sup = 1, graph = F)
plot.MCA(res.mca, invisible = c("ind","var"))
?plot.MCA
plot.MCA(res.mca, choix = "quanti.sup")
orange$Liking.cat <- as.factor(orange$Liking)
dim(orange$Liking.cat)
dim(orange)
orange$Liking.cat <- as.factor(orange$Liking)
res.mca <- MCA(orange[,-1], quanti.sup = 2, quali.sup = c(1,9), graph = F)
plot.MCA(res.mca, invisible = c("var","quali.sup"), label = "none", title = "Understanding defects profiles")
plot.MCA(res.mca, invisible = c("ind","var"))
plot.MCA(res.mca, choix = "quanti.sup")
plot.MCA(res.mca, invisible = c("var","quali.sup"), label = "none", title = "Understanding defects profiles")
plot.MCA(res.mca, invisible = c("var","quali.sup"), label = "none")
plot.MCA(res.mca, invisible = c("ind","var"))
summary(orange)
res.mca <- MCA(orange, quanti.sup = 3, quali.sup = 1:2, graph = F)
plot.MCA(res.mca, invisible = c("var","quali.sup"), label = "none", title = "Understanding defects profiles")
orange <- read.csv2("data/orange.csv")
summary(orange,maxsum = 8)
colnames(orange)
dim(orange)
848/8
levels(orange$Consumer)
#orange <- as.data.frame(orange)
for (j in c(1:2,4:9)) orange[,j] <- as.factor(orange[,j])
summary(orange)
for (j in 4:9) levels(orange[,j]) <- c("ne","ne","JAR","tm","tm")
summary(orange)
summary(orange)
res.mca <- MCA(orange, quanti.sup = 3, quali.sup = 1:2, graph = F)
plot.MCA(res.mca, invisible = c("var","quali.sup"), label = "none", title = "Understanding defects profiles")
plot.MCA(res.mca, invisible = "var", label = "none", title = "Understanding defects profiles")
plot.MCA(res.mca, invisible = c("var","ind"), label = "none", title = "Understanding defects profiles")
res.mca <- MCA(orange[,-1], quanti.sup = 2, quali.sup = 1, graph = F)
plot.MCA(res.mca, invisible = c("ind","var"))
plot.MCA(res.mca, choix = "quanti.sup")
res.mca <- MCA(orange, quanti.sup = 3, quali.sup = 1:2, graph = F)
plot.MCA(res.mca, invisible = c("var","quali.sup"), label = "none", title = "Understanding defects profiles")
plot.MCA(res.mca, invisible = c("ind","var"), label = "none", title = "Understanding defects profiles")
plot.MCA(res.mca, invisible = c("var","quali.sup"), label = "none", title = "Understanding defects profiles: individuals")
plot.MCA(res.mca, invisible = c("ind","var"), label = "none", title = "Understanding defects profiles: sup. var.")
plot.MCA(res.mca, invisible = c("var","quali.sup"), label = "none", title = "Understanding defects profiles (ind.)")
plot.MCA(res.mca, invisible = c("var","quali.sup"), label = "none", title = "Understanding defects profiles (ind.)")
plot.MCA(res.mca, invisible = c("ind","var"), label = "none", title = "Understanding defects profiles (sup. var.)")
res.mca <- MCA(orange[,-1], quanti.sup = 2, quali.sup = 1, graph = F)
plot.MCA(res.mca, invisible = c("ind","var"), label = "none", title = "Understanding defects profiles (sup. var.)")
plot.MCA(res.mca, invisible = c("ind","var"), title = "Understanding defects profiles (sup. var.)")
plot.MCA(res.mca, choix = "quanti.sup")
plot.MCA(res.mca, choix = "quanti.sup", title = "Understanding defects profiles (sup. var.)")
orange$Liking.cat <- as.factor(orange$Liking)
res.mca <- MCA(orange[,-1], quanti.sup = 2, quali.sup = c(1,9), graph = F)
plot.MCA(res.mca, invisible = c("var","quali.sup"), label = "none", title = "Understanding defects profiles")
plot.MCA(res.mca, invisible = c("ind","var"), title = "Understanding defects profiles (sup. var.)")
plot.MCA(res.mca, choix = "quanti.sup")
orange$Liking.cat <- as.factor(orange$Liking)
res.mca <- MCA(orange[,-1], quanti.sup = 2, quali.sup = c(1,9), graph = F)
plot.MCA(res.mca, invisible = c("ind","var"), title = "Understanding defects profiles (sup. var.)")
res.mca <- MCA(orange[,-1], quanti.sup = 2, quali.sup = c(1,9), graph = F)
plot.MCA(res.mca, invisible = c("ind","var"), title = "Understanding defects profiles (sup. var.)")
plot.MCA(res.mca, invisible = "ind", title = "Understanding defects profiles")
distrib_attr <- function(jdd,attr,session=NULL){ #colonne de l'attribut, colonne de la variable session
if(!is.null(session)){
nb_session <- length(levels(jdd$Session))
jdd_attr <- as.data.frame(jdd[,c(attr,session)])
tab <- as.data.frame(table(jdd_attr[,1],jdd_attr[,2]))
colnames(tab) <- c("mod","session","count")
ggplot(tab,aes(x=mod,y=count,fill=session))+
geom_bar(stat="identity",position=position_dodge())+
theme_minimal()+
ggtitle(str_glue("Distribution of modalities for the attribute {colnames(jdd)[attr]}"))+
xlab("Modalities")+
ylab("Number of occurrences")+
scale_fill_manual(values=c("orange","blue"))
}
else{
jdd_attr <- as.data.frame(jdd[,attr])
tab <- as.data.frame(table(jdd_attr))
colnames(tab) <- c("mod","count")
ggplot(tab,aes(x=mod,y=count))+
geom_bar(stat="identity",fill="orange")+
theme_minimal()+
ggtitle(str_glue("Distribution of modalities for the attribute {colnames(jdd)[attr]}"))+
xlab("Modalities")+
ylab("Number of occurrences")
}
}
library(readxl)
library(ade4)
library(FactoMineR)
library(ggplot2)
library(SensoMineR)
library(stringr)
library(dplyr)
orange <- read.csv2("orange.csv")
orange <- read.csv2("data/orange.csv")
summary(orange,maxsum = 8)
colnames(orange)
orange <- as.data.frame(orange)
for (j in c(1:2,4:9)) orange[,j] <- as.factor(orange[,j])
summary(orange)
for (j in 4:9) levels(orange[,j]) <- c("ne","ne","JAR","tm","tm")
distrib_attr(orange,5)
plot.MCA(res.mca, invisible = "ind", title = "Understanding defects profiles")
plot.MCA(res.mca, invisible = "ind", title = "Understanding defects profiles", select = "Ac_JAR")
plot.MCA(res.mca, invisible = "ind", title = "Understanding defects profiles", selectMod = "Ac_JAR")
plot.MCA(res.mca, invisible = "ind", title = "Understanding defects profiles")
plot.MCA(res.mca, invisible = "ind", title = "Understanding defects profiles", selectMod = c("Ac_JAR","7TWA"))
distrib_attr(orange,5)
distrib_attr(orange,6)
distrib_attr_pdt <- function(jdd,attr,pdt,session=NULL){ #colonne de l'attribut, colonne de la variable session
if(!is.null(session)){
nb_session <- length(levels(jdd$Session))
jdd_attr <- as.data.frame(jdd[,c(session,pdt,attr)])
tab <- as.data.frame(table(jdd_attr[,1],jdd_attr[,2],jdd_attr[,3]))
colnames(tab) <- c("session","pdt","mod","count")
list_graph <- list()
a=1
for (j in unique(jdd[,pdt])){
gg <- ggplot(tab[which(tab$pdt==j),-2],aes(x=mod,y=count,fill=session))+
geom_bar(stat="identity",position=position_dodge())+
theme_minimal()+
ggtitle(str_glue("Distribution of modalities for the attribute {colnames(jdd)[attr]}"))+
xlab("Modalities")+
ylab("Number of occurrences")+
scale_fill_manual(values=c("orange","blue"))+
ylim(0,max(tab$count))
list_graph[[a]] <- gg
a=a+1
}
if(length(unique(jdd[,pdt]))%%2==0){
plot_grid(plotlist = list_graph,labels=levels(jdd[,pdt]),ncol = round(length(unique(jdd[,pdt]))/2,0)+1, nrow=2)
}
else{
plot_grid(plotlist = list_graph,labels=levels(jdd[,pdt]),ncol = round(length(unique(jdd[,pdt]))/2,0), nrow=2)
}
}
else{
jdd_attr <- as.data.frame(jdd[,c(pdt,attr)])
tab <- as.data.frame(table(jdd_attr[,1],jdd_attr[,2]))
colnames(tab) <- c("pdt","mod","count")
list_graph <- list()
a=1
for (j in unique(jdd[,pdt])){
gg <- ggplot(tab[which(tab$pdt==j),-1],aes(x=mod,y=count))+
geom_bar(stat="identity",fill="orange")+
theme_minimal()+
ggtitle(str_glue("Distribution of modalities for the attribute {colnames(jdd)[attr]}"))+
xlab("Modalities")+
ylab("Number of occurrences")+
ylim(0,max(tab$count))
list_graph[[a]] <- gg
a=a+1
}
if(length(unique(jdd[,pdt]))%%2==0){
plot_grid(plotlist = list_graph,labels=levels(jdd[,pdt]),ncol = round(length(unique(jdd[,pdt]))/2,0)+1, nrow=2)
}
else{
plot_grid(plotlist = list_graph,labels=levels(jdd[,pdt]),ncol = round(length(unique(jdd[,pdt]))/2,0), nrow=2)
}
}
}
distrib_attr_pdt(orange,5,2)
install.packages("gridExtra")
install.packages("cowplot")
library("gridExtra")
library("cowplot")
distrib_attr_pdt(orange,5,2)
distrib_attr_pdt <- function(jdd,attr,pdt,session=NULL){ #colonne de l'attribut, colonne de la variable session
if(!is.null(session)){
nb_session <- length(levels(jdd$Session))
jdd_attr <- as.data.frame(jdd[,c(session,pdt,attr)])
tab <- as.data.frame(table(jdd_attr[,1],jdd_attr[,2],jdd_attr[,3]))
colnames(tab) <- c("session","pdt","mod","count")
list_graph <- list()
a=1
for (j in unique(jdd[,pdt])){
gg <- ggplot(tab[which(tab$pdt==j),-2],aes(x=mod,y=count,fill=session))+
geom_bar(stat="identity",position=position_dodge())+
theme_minimal()+
ggtitle(str_glue("Distribution of modalities for the attribute {colnames(jdd)[attr]}"))+
xlab("Modalities")+
ylab("Number of occurrences")+
scale_fill_manual(values=c("orange","blue"))+
ylim(0,max(tab$count))
list_graph[[a]] <- gg
a=a+1
}
if(length(unique(jdd[,pdt]))%%2==0){
plot_grid(plotlist = list_graph,labels=levels(jdd[,pdt]),ncol = round(length(unique(jdd[,pdt]))/2,0), nrow=2)
}
else{
plot_grid(plotlist = list_graph,labels=levels(jdd[,pdt]),ncol = round(length(unique(jdd[,pdt]))/2,0)+1, nrow=2)
}
}
else{
jdd_attr <- as.data.frame(jdd[,c(pdt,attr)])
tab <- as.data.frame(table(jdd_attr[,1],jdd_attr[,2]))
colnames(tab) <- c("pdt","mod","count")
list_graph <- list()
a=1
for (j in unique(jdd[,pdt])){
gg <- ggplot(tab[which(tab$pdt==j),-1],aes(x=mod,y=count))+
geom_bar(stat="identity",fill="orange")+
theme_minimal()+
ggtitle(str_glue("Distribution of modalities for the attribute {colnames(jdd)[attr]}"))+
xlab("Modalities")+
ylab("Number of occurrences")+
ylim(0,max(tab$count))
list_graph[[a]] <- gg
a=a+1
}
if(length(unique(jdd[,pdt]))%%2==0){
plot_grid(plotlist = list_graph,labels=levels(jdd[,pdt]),ncol = round(length(unique(jdd[,pdt]))/2,0), nrow=2)
}
else{
plot_grid(plotlist = list_graph,labels=levels(jdd[,pdt]),ncol = round(length(unique(jdd[,pdt]))/2,0)+1, nrow=2)
}
}
}
distrib_attr_pdt(orange,5,2)
distrib_attr(orange,4)
distrib_attr_pdt(orange,4,2)
distrib_attr_pdt(orange,6,2)
orange <- read.csv2("data/orange.csv")
summary(orange,maxsum = 8)
colnames(orange)
dim(orange)
848/8
levels(orange$Consumer)
#orange <- as.data.frame(orange)
for (j in c(1:2,4:9)) orange[,j] <- as.factor(orange[,j])
summary(orange)
for (j in 4:9) levels(orange[,j]) <- c("ne","ne","JAR","tm","tm")
orange.disj <- acm.disjonctif(orange[,4:9])
summary(orange.disj)
orange.disj <- cbind(orange[,1:3],orange.disj)
colnames(orange.disj)
num_JAR <- seq(5,21,3)
num_col <- seq(4,21)
num_col <- num_col[-which(num_col%in%num_JAR)]
summary(orange.disj)
eq.anova <- "AovSum(Liking ~ "
for (i in num_col){
eq.anova <- paste(eq.anova,colnames(orange.disj)[i],"+", sep=" ")
}
eq.anova <- paste(eq.anova, "Juice + Consumer, data = orange.disj)")
res.aov <- eval(parse(text = eq.anova))
res.aov
AovSum
AovSum(Liking ~ Juice + Consumer, data = orange.disj)
goji <- read.csv2("goji.csv")
goji <- read.csv2("data/goji.csv")
summary(goji)
is.data.frame(goji)
goji <- read.csv2("data/goji.csv")
summary(goji)
for (j in 1:10) goji[,j] <- as.factor(goji[,j])
summary(goji)
orange <- read.csv2("data/orange.csv")
summary(orange,maxsum = 8)
colnames(orange)
dim(orange)
848/8
levels(orange$Consumer)
#orange <- as.data.frame(orange)
for (j in c(1:2,4:9)) orange[,j] <- as.factor(orange[,j])
summary(orange)
for (j in 4:9) levels(orange[,j]) <- c("ne","ne","JAR","tm","tm")
summary(orange)
exp.design <- data.frame(matrix(ncol = 3, nrow = dim(orange)[1]))
colnames(exp.design) <- c("Brand","Pulp","Temperature")
for (i in 1:dim(orange)[1]){
pdt <- orange$Juice[i]
pdt_split <- str_split(pdt,"")[[1]]
if(pdt_split[2]=="J"){
exp.design[i,1] <- "Jafaden"
}
else{
exp.design[i,1] <- "Tropicana"
}
if(pdt_split[3]=="P"){
exp.design[i,2] <- "With pulp"
}
else{
exp.design[i,2] <- "Without pulp"
}
if(pdt_split[4]=="A"){
exp.design[i,3] <- "Ambient"
}
else{
exp.design[i,3] <- "Refrigerated"
}
}
exp.design
?str_split
mod <- "JAR"
all_attr <- rownames(res.mca$var$coord)
all_attr
mod_select <- all_attr[which(str_detect(all_attr,mod))]
mod_select
plot.MCA(res.mca, invisible = c("ind"), selectMod = mod_select)
plot.MCA(res.mca, invisible = "ind", selectMod = mod_select)
plot.MCA(res.mca, invisible = "ind", selectMod = c(mod_select))
names(res.mca)
rownames(res.mca$quali.sup$coord)
plot.MCA(res.mca, invisible = "ind", selectMod = c(mod_select,rownames(res.mca$quali.sup$coord)))
mod <- "JAR"
all_attr <- rownames(res.mca$var$coord)
mod.select <- all_attr[which(str_detect(all_attr, mod))]
plot.MCA(res.mca, invisible = "ind", selectMod = c(mod.select,rownames(res.mca$quali.sup$coord)))
attr <- 5
orange_attr <- as.data.frame(orange[,attr])
tab <- as.data.frame(table(orange_attr))
colnames(tab) <- c("mod","count")
ggplot(tab,aes(x=mod,y=count))+
geom_bar(stat="identity",fill="orange")+
theme_minimal()+
ggtitle(str_glue("Distribution of modalities for the attribute {colnames(orange)[attr]}"))+
xlab("Modalities")+
ylab("Number of occurrences")
library(gridExtra)
library(cowplot)
attr = 7
pdt = 2
orange_attr <- as.data.frame(orange[,c(pdt,attr)])
tab <- as.data.frame(table(orange_attr[,1],orange_attr[,2]))
colnames(tab) <- c("pdt","mod","count")
list_graph <- list()
a=1
for (j in unique(orange[,pdt])){
gg <- ggplot(tab[which(tab$pdt==j),-1],aes(x=mod,y=count))+
geom_bar(stat="identity",fill="orange")+
theme_minimal()+
ggtitle(str_glue("Distribution of attribute {colnames(orange)[attr]} for product {j}"))+
xlab("Modalities")+
ylab("Number of occurrences")+
ylim(0,max(tab$count))
list_graph[[a]] <- gg
a=a+1
}
if(length(unique(orange[,pdt]))%%2==0){
plot_grid(plotlist = list_graph,ncol = round(length(unique(orange[,pdt]))/2,0), nrow=2)
} else{
plot_grid(plotlist = list_graph,labels=levels(orange[,pdt]),ncol = round(length(unique(orange[,pdt]))/2,0)+1, nrow=2)
}
gg
