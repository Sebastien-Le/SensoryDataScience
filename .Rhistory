<<<<<<< HEAD
res.penalty.all$Ttest
library(SensoMineR)
res.jar <- JAR(orange, col.p = 2, col.j = 1, col.pref = 3, jarlevel="JAR")
res.jar$penalty2
plot.JAR(res.jar, name.prod = "2JPR", model = 2)
j<- 5
colnames(orange)[j]
levels(orange[,j])[1]
paste(colnames(orange)[j], levels(orange[,j])[1], sep=".")
for (j in 4:9) levels(orange[,j]) <- c(paste(colnames(orange)[j], levels(orange[,j])[1], sep="."),"JAR",
paste(colnames(orange)[j], levels(orange[,j])[3], sep="."))
summary(orange)
res.jar <- JAR(orange, col.p = 2, col.j = 1, col.pref = 3, jarlevel="JAR")
plot.JAR(res.jar, name.prod = "6TPR", model = 2)
orange.dummy.2JPR <- orange.dummy[orange.dummy$Juice == "2JPR",]
# Use the AovSum() function to estimate your model for which the liking is explained by the presence or absence of the defects.
res.penalty.one <- AovSum(Liking ~ Nc.ne + Nc.tm + Io.ne + Io.tm + Su.ne + Su.tm +
Ac.ne + Ac.tm + Bt.ne + Bt.tm + Pu.ne + Pu.tm,
data = orange.dummy.2JPR)
res.penalty.one$Ttest
penalties <- cbind(res.jar$penalty2, res.penalty.one$Ttest[-1,])[,c(1,4)]
penalties <- as.data.frame(penalties)
colnames(penalties) <- c("All_products","JPR")
ggplot(penalties, aes(x = All_products, y = JPR)) +
geom_point() +
geom_text(label = rownames(penalties)) +
geom_abline(intercept = 0, slope = 1) +
xlab("Penalties for all products") +
ylab("Penalties for JPR") +
ggtitle("Impact of defects: product space versus JPR")
summary(penalties)
ggplot(penalties, aes(x = All_products, y = JPR)) +
geom_point() +
geom_text(label = rownames(penalties)) +
geom_abline(intercept = 0, slope = 1) +
xlab("Penalties for all products") +
ylab("Penalties for JPR") +
ggtitle("Impact of defects: product space versus JPR") +
coord_fixed() +
ylim(-2,0.5) +
xlim(-2,0.5)
library(ggrepel)
ggplot(penalties, aes(x = All_products, y = JPR)) +
geom_point() +
geom_text_repel(label = rownames(penalties)) +
geom_abline(intercept = 0, slope = 1) +
xlab("Penalties for all products") +
ylab("Penalties for JPR") +
ggtitle("Impact of defects: product space versus JPR") +
coord_fixed() +
ylim(-2,0.5) +
xlim(-2,0.5)
# https://ggplot2-book.org/polishing.html
# Theme
ggplot(penalties, aes(x = All_products, y = JPR)) +
geom_point() +
geom_text_repel(label = rownames(penalties)) +
geom_abline(intercept = 0, slope = 1) +
xlab("Penalties for all products") +
ylab("Penalties for JPR") +
ggtitle("Impact of defects: product space versus JPR") +
coord_fixed() +
ylim(-2,0.5) +
xlim(-2,0.5) +
theme_light()
res.mca <- MCA(orange, quanti.sup = 3, quali.sup = 1:2, graph = F)
plot.MCA(res.mca, invisible = c("var","quali.sup"), label = "none", title = "Understanding defects profiles (ind.)")
plot.MCA(res.mca, invisible = c("ind","var"), label = "none", title = "Understanding defects profiles (sup. var.)")
res.mca <- MCA(orange[,-1], quanti.sup = 2, quali.sup = 1, graph = F)
plot.MCA(res.mca, invisible = c("ind","var"), title = "Understanding defects profiles (sup. var.)")
plot.MCA(res.mca, choix = "quanti.sup", title = "Understanding defects profiles (sup. var.)")
orange$Liking.cat <- as.factor(orange$Liking)
res.mca <- MCA(orange[,-1], quanti.sup = 2, quali.sup = c(1,9), graph = F)
plot.MCA(res.mca, invisible = c("ind","var"), title = "Understanding defects profiles (sup. var.)")
plot.MCA(res.mca, invisible = "ind", title = "Understanding defects profiles (sup. var.)")
names(res.mca)
names(res.mca$var)
res.mca$var$coord
rownames(res.mca$var$coord)
mod.active <- rownames(res.mca$var$coord)
library(stringr)
str_detect(mod.active, "JAR")
which(str_detect(mod.active, "JAR"))
mod.active[which(str_detect(mod.active, "JAR"))]
mod <- "JAR"
mod.select <- mod.active[which(str_detect(mod.active, mod))]
plot.MCA(res.mca, invisible = "ind", selectMod = c(mod.select,rownames(res.mca$quali.sup$coord)))
exp.design <- data.frame(matrix(ncol = 3, nrow = dim(orange)[1]))
colnames(exp.design) <- c("Brand","Pulp","Temperature")
for (i in 1:dim(orange)[1]){
pdt <- orange$Juice[i]
pdt_split <- str_split(pdt,"")[[1]]
if(pdt_split[2]=="J"){
exp.design[i,1] <- "Jafaden"
}
else{
exp.design[i,1] <- "Tropicana"
}
if(pdt_split[3]=="P"){
exp.design[i,2] <- "With pulp"
}
else{
exp.design[i,2] <- "Without pulp"
}
if(pdt_split[4]=="A"){
exp.design[i,3] <- "Ambient"
}
else{
exp.design[i,3] <- "Refrigerated"
}
}
orange <- cbind(orange, exp.design)
orange[1:5,]
goji <- read.csv2("data/goji.csv")
summary(goji)
for (j in 1:12) goji[,j] <- as.factor(goji[,j])
summary(goji)
library(SensoMineR)
goji.liking <- goji[,-c(2,3,5,6,14)]
goji.typicity <- goji[,-c(2,3,5,6,13)]
res.jar.liking <- JAR(goji.liking, col.p = 2, col.j = 1, col.pref = 9, jarlevel = "JAR")
res.jar.typicity <- JAR(goji.typicity, col.p = 2, col.j = 1, col.pref = 9, jarlevel = "JAR")
res.jar.liking$penalty2
res.jar.typicity$penalty2
penalties <- cbind(res.jar.liking$penalty2, res.jar.typicity$penalty2)[,c(1,4)]
colnames(penalties) <- c("Liking","Typicity")
penalties <- as.data.frame(penalties)
penalties
# https://ggplot2.tidyverse.org/reference/geom_point.html
# 1st attempt
library(ggplot2)
ggplot(penalties, aes(x = Liking, y = Typicity)) +
geom_point() +
geom_text(label = rownames(penalties)) +
geom_abline(intercept = 0, slope = 1) +
xlab("Penalties for Liking") +
ylab("Penalties for Typicity") +
ggtitle("Impact of defects on liking and typicity")
summary(penalties)
ggplot(penalties, aes(x = Liking, y = Typicity)) +
geom_point() +
geom_text(label = rownames(penalties)) +
geom_abline(intercept = 0, slope = 1) +
xlab("Penalties for Liking") +
ylab("Penalties for Typicity") +
ggtitle("Impact of defects on liking and typicity") +
coord_fixed() +
ylim(-2.8,0.3) +
xlim(-2.8,0.3)
library(ggrepel)
ggplot(penalties, aes(x = Liking, y = Typicity)) +
geom_point() +
geom_text_repel(label = rownames(penalties)) +
geom_abline(intercept = 0, slope = 1) +
xlab("Penalties for Liking") +
ylab("Penalties for Typicity") +
ggtitle("Impact of defects on liking and typicity") +
coord_fixed() +
ylim(-2.8,0.5) +
xlim(-2.8,0.5)
ggplot(penalties, aes(x = Liking, y = Typicity)) +
geom_point() +
geom_text_repel(label = rownames(penalties), max.overlaps = Inf) +
geom_abline(intercept = 0, slope = 1) +
xlab("Penalties for Liking") +
ylab("Penalties for Typicity") +
ggtitle("Impact of defects on liking and typicity") +
coord_fixed() +
ylim(-2.8,0.5) +
xlim(-2.8,0.5)
# https://ggplot2-book.org/polishing.html
# attempt theme
ggplot(penalties, aes(x = Liking, y = Typicity)) +
geom_point() +
geom_text_repel(label = rownames(penalties), max.overlaps = Inf) +
geom_abline(intercept = 0, slope = 1) +
xlab("Penalties for Liking") +
ylab("Penalties for Typicity") +
ggtitle("Impact of defects on liking and typicity") +
coord_fixed() +
ylim(-2.8,0.5) +
xlim(-2.8,0.5) +
theme_light()
summary(goji)
res.mca <- MCA(goji, quali.sup = 1:6, quanti.sup = 13:14, graph = F)
plot.MCA(res.mca)
plot.MCA(res.mca, invisible = c("var", "quali.sup"), label = "no")
# 2nd attempt
res.mca <- MCA(goji, quali.sup = 1:6, quanti.sup = 13:14, graph = F, level.ventil = 0.1)
plot.MCA(res.mca, invisible = c("var", "quali.sup"), label = "no")
plot.MCA(res.mca, invisible = c("ind", "quali.sup"))
plot.MCA(res.mca, invisible = "ind")
# 3rd attempt
res.mca <- MCA(goji[,-c(1:3)], quali.sup = 1:3, quanti.sup = 10:11, graph = F, level.ventil = 0.1)
plot.MCA(res.mca, invisible = "ind")
library(stringr)
mod <- "JAR"
all.attr <- rownames(res.mca$var$coord)
mod.select <- all.attr[which(str_detect(all.attr, mod))]
plot.MCA(res.mca, invisible = "ind", selectMod = c("orange","pineapple","apple","20","10","0",mod.select))
plot.MCA(res.mca, choix = "quanti.sup")
goji.inter <- goji[,c(4,7:12)] # product and JAR
j <- 2
contingency <- table(goji.inter$Product,goji.inter[,j])
contingency
colnames(contingency) <- paste(colnames(goji.inter)[j], levels(goji.inter[,j]), sep = "_")
for (j in 3:7){
inter <- table(goji.inter$Product,goji.inter[,j])
colnames(inter) <- paste(colnames(goji.inter)[j], levels(goji.inter[,j]), sep = "_")
contingency <- cbind(contingency, inter)
}
Apple <- apply(contingency[c("127","431","759"),], FUN = sum, 2)
Pineapple <- apply(contingency[c("245","518","876"),], FUN = sum, 2)
Orange <- apply(contingency[c("362","694","983"),], FUN = sum, 2)
D0 <- apply(contingency[c("127","245","362"),], FUN = sum, 2)
D10 <- apply(contingency[c("431","518","694"),], FUN = sum, 2)
D20 <- apply(contingency[c("759","876","983"),], FUN = sum, 2)
row.sup <- rbind(Apple,Pineapple,Orange,D0,D10,D20)
contingency <- rbind(contingency,row.sup)
res.ca <- CA(contingency, graph = F, row.sup = c(10:15))
plot.CA(res.ca, invisible = "col")
ellipseCA(res.ca, ellipse = "row", invisible = "col")
descfreq(contingency[c(1:9),])
descfreq(contingency[c(10:12),])
descfreq(contingency[c(13:15),])
goji.liking.s1 <- goji[goji$Session =="S1",-c(2,3,5,6,14)]
goji.liking.s2 <- goji[goji$Session =="S2",-c(2,3,5,6,14)]
res.jar.s1 <- JAR(goji.liking.s1, col.p = 2, col.j = 1, col.pref = 9, jarlevel = "JAR")
res.jar.s2 <- JAR(goji.liking.s2, col.p = 2, col.j = 1, col.pref = 9, jarlevel = "JAR")
penalties <- cbind(res.jar.s1$penalty2, res.jar.s2$penalty2)[,c(1,4)]
colnames(penalties) <- c("Session_1","Session_2")
penalties <- as.data.frame(penalties)
summary(penalties)
ggplot(penalties, aes(x = Session_1, y = Session_2)) +
geom_point() +
geom_text_repel(label = rownames(penalties), max.overlaps = Inf) +
geom_abline(intercept = 0, slope = 1) +
xlab("Penalties for Session_1") +
ylab("Penalties for Session_2") +
ggtitle("Impact of defects on session 1 and session2") +
coord_fixed() +
ylim(-3,0.5) +
xlim(-3,0.5) +
theme_light()
# Multivariate advanced - representation of the groups
goji.s1 <- goji[goji$Session =="S1",]
goji.s2 <- goji[goji$Session =="S2",]
goji.s1 <- goji.s1[order(goji.s1$Consumer, goji.s1$Product), ]
goji.s2 <- goji.s2[order(goji.s2$Consumer, goji.s2$Product), ]
goji.s1[1:5,]
goji.s2[1:5,]
goji.s1.s2 <- cbind(goji.s1[,-c(1:6,13:14)], goji.s2[,-c(1:6,13:14)])
print("Done!")
res.mfa <- MFA(goji.s1.s2, group = c(6,6), type = c("n","n"), name.group = c("S1","S2"), graph = F)
plot.MFA(res.mfa, choix = "group")
j <- 7
goji.s1.prod <- table(goji.s1$Product, goji.s1[,j])
colnames(goji.s1.prod) <- paste(colnames(goji.s1)[j], levels(goji.s1[,j]), sep = "_")
for (j in 8:12){
inter <- table(goji.s1$Product, goji.s1[,j])
colnames(inter) <- paste(colnames(goji.s1)[j], levels(goji.s1[,j]), sep = "_")
goji.s1.prod <- cbind(goji.s1.prod, inter)
}
j <- 7
goji.s2.prod <- table(goji.s2$Product, goji.s2[,j])
colnames(goji.s2.prod) <- paste(colnames(goji.s2)[j], levels(goji.s2[,j]), sep = "_")
for (j in 8:12){
inter <- table(goji.s2$Product, goji.s2[,j])
colnames(inter) <- paste(colnames(goji.s2)[j], levels(goji.s2[,j]), sep = "_")
goji.s2.prod <- cbind(goji.s2.prod, inter)
}
goji.prod.s1.s2 <- cbind(goji.s1.prod,goji.s2.prod)
res.mfa <- MFA(goji.prod.s1.s2, group = c(30,30), type = c("f","f"), name.group = c("S1","S2"), graph = F)
plot.MFA(res.mfa, choix = "group")
library(readxl)
beard <- read_excel("data/beard_spise.xlsx")
beard[1:5,]
bb <- as.data.frame(beard)
res.textual <- textual(bb, num.text = 4, contingence.by = 1)
names(res.textual)
library(FactoMineR)
res.textual$cont.table
res.textual$nb.words
CA(res.textual$cont.table)
res.ca <- CA(res.textual$cont.table)
plot.CA(res.ca, invisible = "col")
bb[1:16,1:3]
dim(bb)
176/8
prod.drink <- matrix(0, nrow = 8, ncol = 22)
for (j in 0:22){
for (i in 1:8) prod.drink[i,j+1] <- bb$Liking_drink[j*8+i]
}
prod.drink <- matrix(0, nrow = 8, ncol = 22)
for (j in 0:22){
for (i in 1:8) prod.drink[i,j+1] <- bb$Liking_drink[j*8+i]
}
prod.drink <- matrix(0, nrow = 8, ncol = 22)
for (j in 0:21){
for (i in 1:8) prod.drink[i,j+1] <- bb$Liking_drink[j*8+i]
}
prod.drink
rownames(prod.drink) <- levels(as.factor(bb$Stimuli))
prod.drink
prod.drink <- as.data.frame(prod.drink)
prod.drink
res.ca$row$coord[1:2]
res.ca$row$coord[,1:2]
library(SensoMineR)
library(SensoMineR)
carto(res.ca$row$coord[,1:2], prod.drink)
PCA(prod.drink)
plot.CA(res.ca, invisible = "col")
PCA(prod.drink)
PCA(prod.drink, choix = "ind")
PCA(prod.drink, choix = "ind")
res.pca <- PCA(prod.drink, graph = F)
plot.PCA(res.pca)
prod.family <- matrix(0, nrow = 8, ncol = 22)
for (j in 0:21){
for (i in 1:8) prod.family[i,j+1] <- bb$Liking_family[j*8+i]
}
rownames(prod.family) <- levels(as.factor(bb$Stimuli))
prod.family <- as.data.frame(prod.family)
res.pca <- PCA(prod.family, graph = F)
plot.PCA(res.pca)
MFA(cbind(prod.drink, prod.family), group = c(22,22), type = c("s","s"))
MFA(cbind(prod.drink, prod.family), group = c(22,22), type = c("s","s"), name.group = c("Drink","Family"))
plot.CA(res.ca, invisible = "col")
library(readxl)
beard <- read_excel("data/beard_spise.xlsx")
dim(beard)
beard[1:5,]
library(FactoMineR)
bb <- as.data.frame(beard)
res.textual <- textual(bb, num.text = 4, contingence.by = 1)
names(res.textual)
res.textual$cont.table
res.textual$nb.words
library(FactoMineR)
res.ca <- CA(res.textual$cont.table)
plot.CA(res.ca, invisible = "col")
bb[1:16,1:3]
dim(bb)
prod.drink <- matrix(0, nrow = 8, ncol = 22)
for (j in 0:21){
for (i in 1:8) prod.drink[i,j+1] <- bb$Liking_drink[j*8+i]
}
rownames(prod.drink) <- levels(as.factor(bb$Stimuli))
prod.family <- as.data.frame(prod.drink)
res.pca <- PCA(prod.family, graph = F)
plot.PCA(res.pca)
prod.family <- matrix(0, nrow = 8, ncol = 22)
for (j in 0:21){
for (i in 1:8) prod.family[i,j+1] <- bb$Liking_family[j*8+i]
}
rownames(prod.family) <- levels(as.factor(bb$Stimuli))
prod.family <- as.data.frame(prod.family)
res.pca <- PCA(prod.family, graph = F)
plot.PCA(res.pca)
MFA(cbind(prod.drink, prod.family), group = c(22,22), type = c("s","s"), name.group = c("Drink","Family"))
leather <- read.csv2("data/carseat.csv")
dict.polarity <- read.csv2("data/valency_leather.csv")
dict.val.shift <- read.csv2("data/valence_shifters_leather.csv")
print("Done!")
summary(leather)
for (j in 1:3) leather[,j] <- as.factor(leather[,j])
print("Done!")
leather$Text <- tolower(leather$Text)
dict.polarity$Word <- tolower(dict.polarity$Word)
dict.val.shift$Word <- tolower(dict.val.shift$Word)
leather$Text <- gsub("[`^~.',!?;\"]", " ", leather$Text)
leather$Text <- gsub("[[:punct:]]", "", leather$Text)
leather$Text <- gsub("just right", "justright", leather$Text)
leather$Text <- gsub("too much", "toomuch", leather$Text)
leather$Text <- gsub("even if", "evenif", leather$Text)
leather$Text <- gsub("not enough", "notenough", leather$Text)
print("Done!")
library(sentimentr)
polarity <- as_key(dict.polarity)
val.shift <- as_key(dict.val.shift)
print("Done!")
res.sent <- get_sentences(leather$Text)
res.sentiment <- sentiment(res.sent, polarity_dt = polarity, valence_shifters_dt = val.shift)
print("Done!")
leather$Sentiment <- res.sentiment$sentiment
print("Done!")
library(FactoMineR)
res.consistency <- AovSum(Sentiment ~ Hedo_cat + ID_juge, data = leather)
res.consistency$Ftest
res.consistency <- AovSum(Sentiment ~ Hedo_cat, data = leather)
res.consistency$Ftest
res.consistency$Ttest
library(ggplot2)
ggplot(leather, aes(Hedo_cat, Sentiment)) +
geom_boxplot()
leather <- leather[order(leather$ID_juge, leather$Product), ]
prod.Sentiment <- matrix(0, nrow = 10, ncol = 57)
for (j in 0:56){
for (i in 1:10) prod.Sentiment[i,j+1] <- leather$Sentiment[j*10+i]
}
rownames(prod.Sentiment) <- levels(as.factor(leather$Product))
colnames(prod.Sentiment) <- paste("S",levels(leather$ID_juge),sep = "")
print("Done!")
res.pca <- PCA(prod.Sentiment, graph = FALSE)
plot.PCA(res.pca)
plot.PCA(res.pca, choix = "var")
leather.score <- read.csv2("data/carseat_scores.csv")
summary(leather.score)
for (j in 1:3) leather.score[,j] <- as.factor(leather.score[,j])
print("Done!")
leather.score <- leather.score[order(leather.score$ID_juge, leather.score$Product), ]
prod.Valency_ML <- matrix(0, nrow = 10, ncol = 57)
for (j in 0:56){
for (i in 1:10) prod.Valency_ML[i,j+1] <- leather.score$Valency_ML[j*10+i]
}
rownames(prod.Valency_ML) <- levels(as.factor(leather.score$Product))
colnames(prod.Valency_ML) <- paste("ML",levels(leather.score$ID_juge),sep = "")
print("Done!")
res.pca <- PCA(prod.Valency_ML, graph = FALSE)
plot.PCA(res.pca)
plot.PCA(res.pca, choix = "var")
prod.Liking <- matrix(0, nrow = 10, ncol = 57)
for (j in 0:56){
for (i in 1:10) prod.Liking[i,j+1] <- leather.score$Liking[j*10+i]
}
rownames(prod.Liking) <- levels(as.factor(leather.score$Product))
colnames(prod.Liking) <- paste("L",levels(leather.score$ID_juge),sep = "")
print("Done!")
res.pca <- PCA(prod.Liking, graph = FALSE)
plot.PCA(res.pca)
plot.PCA(res.pca, choix = "var")
scores <- cbind(prod.Sentiment, prod.Valency_ML, prod.Liking)
print("Done!")
res.mfa <- MFA(scores, group = rep(57, 3), type = rep("s", 3),
name.group = c("Sentiment", "Machine", "Liking"), graph = FALSE)
plot.MFA(res.mfa, choix = "group")
plot.MFA(res.mfa, choix = "axes")
plot.MFA(res.mfa, choix = "ind")
plot.MFA(res.mfa, partial = "all")
leather <- read.csv2("data/carseat.csv")
dict.polarity <- read.csv2("data/valency_leather.csv")
dict.val.shift <- read.csv2("data/valence_shifters_leather.csv")
print("Done!")
leather <- read.csv2("data/carseat.csv")
dict.polarity <- read.csv2("data/valency_leather.csv")
dict.val.shift <- read.csv2("data/valence_shifters_leather.csv")
print("Done!")
View(leather)
View(dict.val.shift)
summary(leather)
for (j in 1:3) leather[,j] <- as.factor(leather[,j])
print("Done!")
leather$Text <- tolower(leather$Text)
dict.polarity$Word <- tolower(dict.polarity$Word)
dict.val.shift$Word <- tolower(dict.val.shift$Word)
leather$Text <- gsub("[`^~.',!?;\"]", " ", leather$Text)
leather$Text <- gsub("[[:punct:]]", "", leather$Text)
leather$Text <- gsub("just right", "justright", leather$Text)
leather$Text <- gsub("too much", "toomuch", leather$Text)
leather$Text <- gsub("even if", "evenif", leather$Text)
leather$Text <- gsub("not enough", "notenough", leather$Text)
print("Done!")
library(sentimentr)
polarity <- as_key(dict.polarity)
val.shift <- as_key(dict.val.shift)
print("Done!")
res.sent <- get_sentences(leather$Text)
res.sentiment <- sentiment(res.sent, polarity_dt = polarity, valence_shifters_dt = val.shift)
print("Done!")
leather$Sentiment <- res.sentiment$sentiment
print("Done!")
library(FactoMineR)
res.consistency <- AovSum(Sentiment ~ Hedo_cat + ID_juge, data = leather)
res.consistency$Ftest
res.consistency <- AovSum(Sentiment ~ Hedo_cat, data = leather)
res.consistency$Ftest
res.consistency$Ttest
library(ggplot2)
ggplot(leather, aes(Hedo_cat, Sentiment)) +
geom_boxplot()
leather <- leather[order(leather$ID_juge, leather$Product), ]
prod.Sentiment <- matrix(0, nrow = 10, ncol = 57)
for (j in 0:56){
for (i in 1:10) prod.Sentiment[i,j+1] <- leather$Sentiment[j*10+i]
}
rownames(prod.Sentiment) <- levels(as.factor(leather$Product))
colnames(prod.Sentiment) <- paste("S",levels(leather$ID_juge),sep = "")
print("Done!")
res.pca <- PCA(prod.Sentiment, graph = FALSE)
plot.PCA(res.pca)
plot.PCA(res.pca, choix = "var")
View(leather)
leather.score <- read.csv2("data/carseat_scores.csv")
aggregate(leather.score$Liking, by=leather.score$Product, FUN = mean)
aggregate(leather.score$Liking, by=as.list(leather.score$Product), FUN = mean)
aggregate(leather.score$Liking, by=list(leather.score$Product), FUN = mean)
leather.score <- read.csv2("data/carseat_scores.csv")
summary(leather.score)
for (j in 1:3) leather.score[,j] <- as.factor(leather.score[,j])
print("Done!")
leather.score <- leather.score[order(leather.score$ID_juge, leather.score$Product), ]
prod.Valency_ML <- matrix(0, nrow = 10, ncol = 57)
for (j in 0:56){
for (i in 1:10) prod.Valency_ML[i,j+1] <- leather.score$Valency_ML[j*10+i]
}
rownames(prod.Valency_ML) <- levels(as.factor(leather.score$Product))
colnames(prod.Valency_ML) <- paste("ML",levels(leather.score$ID_juge),sep = "")
print("Done!")
res.pca <- PCA(prod.Valency_ML, graph = FALSE)
plot.PCA(res.pca)
plot.PCA(res.pca, choix = "var")
=======
library(usethis)
create_github_token()
install.packages("gitcreds")
library(gitcreds)
gitcreds_set()
GMO <- read.csv("data/gmo.csv", sep=';')
View(GMO)
GMO<-GMO[-136,]
?read.csv
GMO <- read.csv("data/gmo.csv", sep=';', header = TRUE)
View(GMO)
summary(GMO)
for (j in 1:21)
{
GMO[, j] <- as.factor(GMO[, j])
}
summary(GMO)
?table
table(GMO$Position.Al.A,GMO$Political.Party)
>>>>>>> 3878d4733b278b68b423a3ae2d581242a2e62fed
