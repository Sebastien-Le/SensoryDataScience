}
prod.sentiment
for (j in 0:56){
for (i in 1:10) prod.sentiment[i,j] <- leather$sentiment[j*10+i]
}
prod.sentiment
leather$sentiment
prod.sentiment <- matrix(0, nrow = 10, ncol = 57)
for (j in 0:56){
for (i in 1:10){
prod.sentiment[i,j] <- leather$sentiment[j*10+i]
}
}
prod.sentiment
for (j in 0:56){
for (i in 1:10){
prod.sentiment[i,j+1] <- leather$sentiment[j*10+i]
}
}
prod.sentiment
leather$sentiment
for (j in 0:56){
for (i in 1:10) prod.sentiment[i,j+1] <- leather$sentiment[j*10+i]
}
prod.sentiment
levels(leather$Product)
leather
summary(leather)
levels(as.factor(leather$Product))
rownames(prod.sentiment) <- levels(as.factor(leather$Product))
rownames(prod.sentiment)
levels(leather$ID_juge)
colnames(prod.sentiment) <- levels(leather$ID_juge)
colnames(prod.sentiment)
paste(levels(leather$ID_juge),"J")
paste("J",levels(leather$ID_juge),"")
paste("J",levels(leather$ID_juge),"_")
?paste
paste("J",levels(leather$ID_juge),sep = "")
rownames(prod.sentiment) <- levels(as.factor(leather$Product))
colnames(prod.sentiment) <- paste("J",levels(leather$ID_juge),sep = "")
PCA(prod.sentiment)
leather <- read.csv2("data/leather.csv")
dico_pola <- read.csv2("data/valency_leather.csv")
dico_val <- read.csv2("data/valence_shifters_leather.csv")
##03
leather$Text <- tolower(leather$Text) #met tout en minuscules
dico_pola$Word <- tolower(dico_pola$Word)
dico_val$Word <- tolower(dico_val$Word)
leather$Text <- gsub("[`^~.',!?;\"]", " ", leather$Text)
leather$Text <- gsub("[[:punct:]]", "", leather$Text)
leather$Text <- gsub("just right", "justright", leather$Text)
leather$Text <- gsub("too much", "toomuch", leather$Text)
leather$Text <- gsub("even if", "evenif", leather$Text)
leather$Text <- gsub("not enough", "notenough", leather$Text)
##04
library(sentimentr)
mykey_pola <- as_key(dico_pola)
mykey_val <- as_key(dico_val)
##05
data_sent <- get_sentences(leather$Text)
sentiment1 <- sentiment(data_sent, polarity_dt = mykey_pola, valence_shifters_dt = mykey_val)
##06
leather$sentiment <- sentiment1$sentiment
sentprod <- aggregate(leather$sentiment, by = list(leather$Product), FUN = mean)
sentprod <- sentprod[order(-sentprod$x),]
##07
liking <- aggregate(leather$Liking, by = list(leather$Product), FUN = mean)
liking <- liking[order(-liking$x),]
liking
AovSum(leather$sentiment ~ leather$Hedo_cat)
leather$Hedo_cat <- factor(leather$Hedo_cat)
AovSum(leather$sentiment ~ leather$Hedo_cat)
summary(leather)
leather <- read.csv2("data/leather.csv")
dico_pola <- read.csv2("data/valency_leather.csv")
dico_val <- read.csv2("data/valence_shifters_leather.csv")
summary(leather)
summary(leather)
for (j in 1:3) leather[,j] <- as.factor(leather[,j])
summary(leather)
leather$Text <- tolower(leather$Text) #met tout en minuscules
dico_pola$Word <- tolower(dico_pola$Word)
dico_val$Word <- tolower(dico_val$Word)
leather$Text <- gsub("[`^~.',!?;\"]", " ", leather$Text)
leather$Text <- gsub("[[:punct:]]", "", leather$Text)
leather$Text <- gsub("just right", "justright", leather$Text)
leather$Text <- gsub("too much", "toomuch", leather$Text)
leather$Text <- gsub("even if", "evenif", leather$Text)
leather$Text <- gsub("not enough", "notenough", leather$Text)
##04
library(sentimentr)
mykey_pola <- as_key(dico_pola)
mykey_val <- as_key(dico_val)
##05
data_sent <- get_sentences(leather$Text)
sentiment1 <- sentiment(data_sent, polarity_dt = mykey_pola, valence_shifters_dt = mykey_val)
##06
leather$sentiment <- sentiment1$sentiment
sentprod <- aggregate(leather$sentiment, by = list(leather$Product), FUN = mean)
sentprod <- sentprod[order(-sentprod$x),]
summary(leather)
library(ggplot2)
library(ggrepel)
ggplot(leather, aes(x = Liking, y = sentiment)) +
geom_point()
polarity <- as_key(dico_pola)
val.shift <- as_key(dico_val)
leather <- read.csv2("data/leather.csv")
dict.polarity <- read.csv2("data/valency_leather.csv")
dict.val.shift <- read.csv2("data/valence_shifters_leather.csv")
summary(leather)
for (j in 1:3) leather[,j] <- as.factor(leather[,j])
summary(leather)
##03
leather$Text <- tolower(leather$Text) #met tout en minuscules
dict.polarity$Word <- tolower(dict.polarity$Word)
dict.val.shift$Word <- tolower(dict.val.shift$Word)
leather$Text <- gsub("[`^~.',!?;\"]", " ", leather$Text)
leather$Text <- gsub("[[:punct:]]", "", leather$Text)
leather$Text <- gsub("just right", "justright", leather$Text)
leather$Text <- gsub("too much", "toomuch", leather$Text)
leather$Text <- gsub("even if", "evenif", leather$Text)
leather$Text <- gsub("not enough", "notenough", leather$Text)
##04
library(sentimentr)
polarity <- as_key(dict.polarity)
val.shift <- as_key(dict.val.shift)
##05
res.sent <- get_sentences(leather$Text)
res.sentiment <- sentiment(res.sent, polarity_dt = polarity, valence_shifters_dt = val.shift)
##06
leather$Sentiment <- res.sentiment$sentiment
AovSum(leather$sentiment ~ leather$Hedo_cat + Id)
summary(leather)
AovSum(Ssentiment ~ Hedo_cat + Id_juge, data = leather)
library(FactoMineR)
res.consistency <- AovSum(Ssentiment ~ Hedo_cat + Id_juge, data = leather)
res.consistency <- AovSum(Sentiment ~ Hedo_cat + Id_juge, data = leather)
res.consistency <- AovSum(Sentiment ~ Hedo_cat + ID_juge, data = leather)
res.consistency$Ftest
res.consistency$Ftest
res.consistency$Ttest
res.consistency <- AovSum(Sentiment ~ Hedo_cat, data = leather)
res.consistency$Ftest
res.consistency$Ttest
p <- ggplot(leather, aes(Hedo_cat, Sentiment))
library(ggplot2)
p <- ggplot(leather, aes(Hedo_cat, Sentiment))
p + geom_boxplot()
library(ggplot2)
ggplot(leather, aes(Hedo_cat, Sentiment)) +
geom_boxplot()
leather <- leather[order(leather$ID_juge, leather$Product), ]
prod.sentiment <- matrix(0, nrow = 10, ncol = 57)
for (j in 0:56){
for (i in 1:10) prod.sentiment[i,j+1] <- leather$sentiment[j*10+i]
}
leather <- leather[order(leather$ID_juge, leather$Product), ]
prod.sentiment <- matrix(0, nrow = 10, ncol = 57)
for (j in 0:56){
for (i in 1:10) prod.sentiment[i,j+1] <- leather$Sentiment[j*10+i]
}
rownames(prod.sentiment) <- levels(as.factor(leather$Product))
colnames(prod.sentiment) <- paste("J",levels(leather$ID_juge),sep = "")
res.pca < PCA(prod.sentiment, graph = F)
res.pca < PCA(prod.sentiment, graph = F)
res.pca <- PCA(prod.sentiment, graph = F)
plot.PCA(res.pca, choix = "ind")
plot.PCA(res.pca, choix = "var")
summary(leather)
prod.hedo.sort <- matrix(0, nrow = 10, ncol = 57)
for (j in 0:56){
for (i in 1:10) prod.hedo.sort[i,j+1] <- leather$Hedo_cat[j*10+i]
}
rownames(prod.hedo.sort) <- levels(as.factor(leather$Product))
colnames(prod.hedo.sort) <- paste("J",levels(leather$ID_juge),sep = "")
prod.hedo.sort
MCA(prod.hedo.sort)
summary(leather)
leather$Hedo_cat
leather$Hedo_cat[j*10+i]
prod.hedo.sort
leather$Hedo_cat[j*10+i]
as.character(leather$Hedo_cat[j*10+i])
prod.hedo.sort <- matrix(0, nrow = 10, ncol = 57)
for (j in 0:56){
for (i in 1:10) prod.hedo.sort[i,j+1] <- as.character(leather$Hedo_cat[j*10+i])
}
rownames(prod.hedo.sort) <- levels(as.factor(leather$Product))
colnames(prod.hedo.sort) <- paste("J",levels(leather$ID_juge),sep = "")
prod.hedo.sort
prod.hedo.sort <- as.data.frame(prod.hedo.sort)
prod.hedo.sort
MCA(prod.hedo.sort)
cbind(prod.hedo.sort, prod.sentiment)
MFA(cbind(prod.hedo.sort, prod.sentiment), type = c("n","s"), group = c(57,57))
res. mca <- MCA(prod.hedo.sort)
res.mca <- MCA(prod.hedo.sort)
res.pca <- PCA(prod.sentiment)
prod.sentiment
res.mca$ind$coord[,1:2]
res.mca$ind$coord[,1:2]
res.mca$ind$coord[,1:2]
library(SensoMineR)
carto(res.mca$ind$coord[,1:2],prod.sentiment)
carto(as.data.frame(res.mca$ind$coord[,1:2]),prod.sentiment)
carto(as.data.frame(res.mca$ind$coord[,1:2]),as.data.frame(prod.sentiment))
##02
leather <- read.csv2("data/leather.csv")
dict.polarity <- read.csv2("data/valency_leather.csv")
dict.val.shift <- read.csv2("data/valence_shifters_leather.csv")
summary(leather)
for (j in 1:3) leather[,j] <- as.factor(leather[,j])
summary(leather)
##03
leather$Text <- tolower(leather$Text) #met tout en minuscules
dict.polarity$Word <- tolower(dict.polarity$Word)
dict.val.shift$Word <- tolower(dict.val.shift$Word)
leather$Text <- gsub("[`^~.',!?;\"]", " ", leather$Text)
leather$Text <- gsub("[[:punct:]]", "", leather$Text)
leather$Text <- gsub("just right", "justright", leather$Text)
leather$Text <- gsub("too much", "toomuch", leather$Text)
leather$Text <- gsub("even if", "evenif", leather$Text)
leather$Text <- gsub("not enough", "notenough", leather$Text)
library(sentimentr)
polarity <- as_key(dict.polarity)
val.shift <- as_key(dict.val.shift)
##05
res.sent <- get_sentences(leather$Text)
res.sentiment <- sentiment(res.sent, polarity_dt = polarity, valence_shifters_dt = val.shift)
##06
leather$Sentiment <- res.sentiment$sentiment
library(FactoMineR)
res.consistency <- AovSum(Sentiment ~ Hedo_cat + ID_juge, data = leather)
res.consistency$Ftest
res.consistency$Ttest
res.consistency <- AovSum(Sentiment ~ Hedo_cat, data = leather)
res.consistency$Ftest
res.consistency$Ttest
library(ggplot2)
ggplot(leather, aes(Hedo_cat, Sentiment)) +
geom_boxplot()
leather <- leather[order(leather$ID_juge, leather$Product), ]
prod.sentiment <- matrix(0, nrow = 10, ncol = 57)
for (j in 0:56){
for (i in 1:10) prod.sentiment[i,j+1] <- leather$Sentiment[j*10+i]
}
rownames(prod.sentiment) <- levels(as.factor(leather$Product))
colnames(prod.sentiment) <- paste("J",levels(leather$ID_juge),sep = "")
res.pca <- PCA(prod.sentiment)
valency_ML <- read.csv2("valency_score_leather.csv")
valency_ML <- read.csv2("data/valency_score_leather.csv")
summary(valency_ML)
summary(valency_ML)
for (j in 1:3) valency_ML[,j] <- as.factor(valency_ML[,j])
summary(valency_ML)
##02
leather <- read.csv2("data/leather.csv")
summary(leather)
summary(valency_ML)
for (j in 1:4) valency_ML[,j] <- as.factor(valency_ML[,j])
summary(valency_ML)
summary(leather)
for (j in 1:3) leather[,j] <- as.factor(leather[,j])
summary(leather)
valency_score_leather <- cbind(leather, valency_ML[,])
summary(valency_score_leather)
valency_score_leather <- cbind(leather, valency_ML[,6])
summary(valency_score_leather)
valency_score_leather <- cbind(leather, valency_ML$valency_score)
summary(valency_score_leather)
leather <- read.csv2("data/leather.csv")
dict.polarity <- read.csv2("data/valency_leather.csv")
dict.val.shift <- read.csv2("data/valence_shifters_leather.csv")
summary(leather)
for (j in 1:3) leather[,j] <- as.factor(leather[,j])
summary(leather)
leather[,-5]
summary(leather[,-5])
leather_p <- leather[,-5]
summary(leather_p)
write.table(leather_p,"carseat.csv", sep=";",dec=",",col.names = NA)
essai <- read.csv2("carseat.csv")
summary(essai)
essai <- read.csv2("carseat.csv")
summary(essai)
for (j in 1:3) essai[,j] <- as.factor(essai[,j])
summary(essai)
summary(leather)
summary(valency_ML)
final <- cbind(essai, valency_ML[,6], leather[,5])
summary(final)
leather <- read.csv2("data/leather.csv")
dict.polarity <- read.csv2("data/valency_leather.csv")
dict.val.shift <- read.csv2("data/valence_shifters_leather.csv")
summary(leather)
for (j in 1:3) leather[,j] <- as.factor(leather[,j])
##03
leather$Text <- tolower(leather$Text) #met tout en minuscules
dict.polarity$Word <- tolower(dict.polarity$Word)
dict.val.shift$Word <- tolower(dict.val.shift$Word)
leather$Text <- gsub("[`^~.',!?;\"]", " ", leather$Text)
leather$Text <- gsub("[[:punct:]]", "", leather$Text)
leather$Text <- gsub("just right", "justright", leather$Text)
leather$Text <- gsub("too much", "toomuch", leather$Text)
leather$Text <- gsub("even if", "evenif", leather$Text)
leather$Text <- gsub("not enough", "notenough", leather$Text)
##04
library(sentimentr)
polarity <- as_key(dict.polarity)
val.shift <- as_key(dict.val.shift)
##05
res.sent <- get_sentences(leather$Text)
res.sentiment <- sentiment(res.sent, polarity_dt = polarity, valence_shifters_dt = val.shift)
##06
leather$Sentiment <- res.sentiment$sentiment
summary(leather)
final <- cbind(leather, valency_ML[,6])
summary(final)
final <- final[,c(1:4,6,7,5)]
summary(final)
colnames(final)
colnames(final)[6]
colnames(final)[6] <- "valency_ML"
summary(final)
write.table(final,"carseat_scores.csv", sep=";",dec=",",col.names = NA)
res.pca <- PCA(prod.sentiment)
leather <- read.csv2("carseat.csv")
leather
dict.polarity <- read.csv2("data/valency_leather.csv")
dict.val.shift <- read.csv2("data/valence_shifters_leather.csv")
summary(leather)
for (j in 1:3) leather[,j] <- as.factor(leather[,j])
##03
leather$Text <- tolower(leather$Text) #met tout en minuscules
dict.polarity$Word <- tolower(dict.polarity$Word)
dict.val.shift$Word <- tolower(dict.val.shift$Word)
leather$Text <- gsub("[`^~.',!?;\"]", " ", leather$Text)
leather$Text <- gsub("[[:punct:]]", "", leather$Text)
leather$Text <- gsub("just right", "justright", leather$Text)
leather$Text <- gsub("too much", "toomuch", leather$Text)
leather$Text <- gsub("even if", "evenif", leather$Text)
leather$Text <- gsub("not enough", "notenough", leather$Text)
##04
library(sentimentr)
polarity <- as_key(dict.polarity)
val.shift <- as_key(dict.val.shift)
##05
res.sent <- get_sentences(leather$Text)
res.sentiment <- sentiment(res.sent, polarity_dt = polarity, valence_shifters_dt = val.shift)
##06
leather$Sentiment <- res.sentiment$sentiment
library(FactoMineR)
res.consistency <- AovSum(Sentiment ~ Hedo_cat + ID_juge, data = leather)
res.consistency$Ftest
res.consistency$Ttest
res.consistency <- AovSum(Sentiment ~ Hedo_cat, data = leather)
res.consistency$Ftest
res.consistency$Ttest
library(ggplot2)
ggplot(leather, aes(Hedo_cat, Sentiment)) +
geom_boxplot()
leather <- leather[order(leather$ID_juge, leather$Product), ]
prod.sentiment <- matrix(0, nrow = 10, ncol = 57)
for (j in 0:56){
for (i in 1:10) prod.sentiment[i,j+1] <- leather$Sentiment[j*10+i]
}
rownames(prod.sentiment) <- levels(as.factor(leather$Product))
colnames(prod.sentiment) <- paste("J",levels(leather$ID_juge),sep = "")
res.pca <- PCA(prod.sentiment)
carseat <- read.csv2("carseat_scores.csv")
summary(carseat)
carseat <- read.csv2("carseat_scores.csv")
summary(carseat)
leather.score <- read.csv2("carseat_scores.csv")
summary(leather.score)
leather.score <- leather.score[order(leather.score$ID_juge, leather.score$Product), ]
prod.Valency_ML <- matrix(0, nrow = 10, ncol = 57)
for (j in 0:56){
for (i in 1:10) prod.Valency_ML[i,j+1] <- leather.score$Valency_ML[j*10+i]
}
rownames(prod.Valency_ML) <- levels(as.factor(leather.score$Product))
colnames(prod.Valency_ML) <- paste("J",levels(leather.score$ID_juge),sep = "")
leather.score <- leather.score[order(leather.score$ID_juge, leather.score$Product), ]
prod.Valency_ML <- matrix(0, nrow = 10, ncol = 57)
for (j in 0:56){
for (i in 1:10) prod.Valency_ML[i,j+1] <- leather.score$Valency_ML[j*10+i]
}
prod.Valency_ML
levels(as.factor(leather.score$Product))
paste("J",levels(leather.score$ID_juge),sep = "")
summary(leather.score)
leather.score <- read.csv2("carseat_scores.csv")
summary(leather.score)
for (j in 1:3) leather.score[,j] <- as.factor(leather.score[,j])
leather.score <- leather.score[order(leather.score$ID_juge, leather.score$Product), ]
prod.Valency_ML <- matrix(0, nrow = 10, ncol = 57)
for (j in 0:56){
for (i in 1:10) prod.Valency_ML[i,j+1] <- leather.score$Valency_ML[j*10+i]
}
rownames(prod.Valency_ML) <- levels(as.factor(leather.score$Product))
colnames(prod.Valency_ML) <- paste("J",levels(leather.score$ID_juge),sep = "")
leather.score <- read.csv2("carseat_scores.csv")
summary(leather.score)
for (j in 1:3) leather.score[,j] <- as.factor(leather.score[,j])
leather.score <- leather.score[order(leather.score$ID_juge, leather.score$Product), ]
prod.Valency_ML <- matrix(0, nrow = 10, ncol = 57)
for (j in 0:56){
for (i in 1:10) prod.Valency_ML[i,j+1] <- leather.score$Valency_ML[j*10+i]
}
rownames(prod.Valency_ML) <- levels(as.factor(leather.score$Product))
colnames(prod.Valency_ML) <- paste("ML",levels(leather.score$ID_juge),sep = "")
res.pca <- PCA(prod.Valency_ML)
prod.Liking <- matrix(0, nrow = 10, ncol = 57)
for (j in 0:56){
for (i in 1:10) prod.Liking[i,j+1] <- leather.score$Liking[j*10+i]
}
rownames(prod.Liking) <- levels(as.factor(leather.score$Product))
colnames(prod.Liking) <- paste("L",levels(leather.score$ID_juge),sep = "")
prod.Liking
#
res.pca <- PCA(prod.Liking)
prod.sentiment <- matrix(0, nrow = 10, ncol = 57)
for (j in 0:56){
for (i in 1:10) prod.sentiment[i,j+1] <- leather$Sentiment[j*10+i]
}
rownames(prod.sentiment) <- levels(as.factor(leather$Product))
colnames(prod.sentiment) <- paste("S",levels(leather$ID_juge),sep = "")
res.pca <- PCA(prod.sentiment)
prod.Sentiment <- matrix(0, nrow = 10, ncol = 57)
for (j in 0:56){
for (i in 1:10) prod.Sentiment[i,j+1] <- leather$Sentiment[j*10+i]
}
rownames(prod.Sentiment) <- levels(as.factor(leather$Product))
colnames(prod.Sentiment) <- paste("S",levels(leather$ID_juge),sep = "")
res.pca <- PCA(prod.Sentiment)
scores <- cbind(prod.Sentiment, prod.Valency_ML, prod.Liking)
rep("s", 3)
MFA(scores, group = rep(57, 3), type = rep("s", 3), name.group = c("Sentiment", "Machine", "Liking"))
leather <- read.csv2("carseat.csv")
dict.polarity <- read.csv2("data/valency_leather.csv")
dict.val.shift <- read.csv2("data/valence_shifters_leather.csv")
summary(leather)
for (j in 1:3) leather[,j] <- as.factor(leather[,j])
##03
leather$Text <- tolower(leather$Text) #met tout en minuscules
dict.polarity$Word <- tolower(dict.polarity$Word)
dict.val.shift$Word <- tolower(dict.val.shift$Word)
leather$Text <- gsub("[`^~.',!?;\"]", " ", leather$Text)
leather$Text <- gsub("[[:punct:]]", "", leather$Text)
leather$Text <- gsub("just right", "justright", leather$Text)
leather$Text <- gsub("too much", "toomuch", leather$Text)
leather$Text <- gsub("even if", "evenif", leather$Text)
leather$Text <- gsub("not enough", "notenough", leather$Text)
polarity <- as_key(dict.polarity)
##04
library(sentimentr)
polarity <- as_key(dict.polarity)
val.shift <- as_key(dict.val.shift)
##05
res.sent <- get_sentences(leather$Text)
res.sentiment <- sentiment(res.sent, polarity_dt = polarity, valence_shifters_dt = val.shift)
##06
leather$Sentiment <- res.sentiment$sentiment
library(FactoMineR)
res.consistency <- AovSum(Sentiment ~ Hedo_cat + ID_juge, data = leather)
res.consistency$Ftest
res.consistency$Ttest
res.consistency <- AovSum(Sentiment ~ Hedo_cat, data = leather)
res.consistency$Ftest
res.consistency$Ttest
library(ggplot2)
ggplot(leather, aes(Hedo_cat, Sentiment)) +
geom_boxplot()
leather <- leather[order(leather$ID_juge, leather$Product), ]
prod.Sentiment <- matrix(0, nrow = 10, ncol = 57)
for (j in 0:56){
for (i in 1:10) prod.Sentiment[i,j+1] <- leather$Sentiment[j*10+i]
}
rownames(prod.Sentiment) <- levels(as.factor(leather$Product))
colnames(prod.Sentiment) <- paste("S",levels(leather$ID_juge),sep = "")
res.pca <- PCA(prod.Sentiment)
#############################
# ML
#############################
#
leather.score <- read.csv2("carseat_scores.csv")
summary(leather.score)
for (j in 1:3) leather.score[,j] <- as.factor(leather.score[,j])
#
leather.score <- leather.score[order(leather.score$ID_juge, leather.score$Product), ]
#
prod.Valency_ML <- matrix(0, nrow = 10, ncol = 57)
for (j in 0:56){
for (i in 1:10) prod.Valency_ML[i,j+1] <- leather.score$Valency_ML[j*10+i]
}
rownames(prod.Valency_ML) <- levels(as.factor(leather.score$Product))
colnames(prod.Valency_ML) <- paste("ML",levels(leather.score$ID_juge),sep = "")
#
res.pca <- PCA(prod.Valency_ML)
#
prod.Liking <- matrix(0, nrow = 10, ncol = 57)
for (j in 0:56){
for (i in 1:10) prod.Liking[i,j+1] <- leather.score$Liking[j*10+i]
}
rownames(prod.Liking) <- levels(as.factor(leather.score$Product))
colnames(prod.Liking) <- paste("L",levels(leather.score$ID_juge),sep = "")
#
res.pca <- PCA(prod.Liking)
scores <- cbind(prod.Sentiment, prod.Valency_ML, prod.Liking)
MFA(scores, group = rep(57, 3), type = rep("s", 3), name.group = c("Sentiment", "Machine", "Liking"))
